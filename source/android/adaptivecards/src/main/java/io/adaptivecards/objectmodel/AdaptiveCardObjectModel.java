/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.adaptivecards.objectmodel;

public class AdaptiveCardObjectModel implements AdaptiveCardObjectModelConstants {
  public static String AdaptiveCardSchemaKeyToString(AdaptiveCardSchemaKey type) {
    return AdaptiveCardObjectModelJNI.AdaptiveCardSchemaKeyToString(type.swigValue());
  }

  public static AdaptiveCardSchemaKey AdaptiveCardSchemaKeyFromString(String type) {
    return AdaptiveCardSchemaKey.swigToEnum(AdaptiveCardObjectModelJNI.AdaptiveCardSchemaKeyFromString(type));
  }

  public static String CardElementTypeToString(CardElementType elementType) {
    return AdaptiveCardObjectModelJNI.CardElementTypeToString(elementType.swigValue());
  }

  public static CardElementType CardElementTypeFromString(String elementType) {
    return CardElementType.swigToEnum(AdaptiveCardObjectModelJNI.CardElementTypeFromString(elementType));
  }

  public static String ActionTypeToString(ActionType actionType) {
    return AdaptiveCardObjectModelJNI.ActionTypeToString(actionType.swigValue());
  }

  public static ActionType ActionTypeFromString(String actionType) {
    return ActionType.swigToEnum(AdaptiveCardObjectModelJNI.ActionTypeFromString(actionType));
  }

  public static String HorizontalAlignmentToString(HorizontalAlignment alignment) {
    return AdaptiveCardObjectModelJNI.HorizontalAlignmentToString(alignment.swigValue());
  }

  public static HorizontalAlignment HorizontalAlignmentFromString(String alignment) {
    return HorizontalAlignment.swigToEnum(AdaptiveCardObjectModelJNI.HorizontalAlignmentFromString(alignment));
  }

  public static String ForegroundColorToString(ForegroundColor type) {
    return AdaptiveCardObjectModelJNI.ForegroundColorToString(type.swigValue());
  }

  public static ForegroundColor ForegroundColorFromString(String type) {
    return ForegroundColor.swigToEnum(AdaptiveCardObjectModelJNI.ForegroundColorFromString(type));
  }

  public static String TextWeightToString(TextWeight type) {
    return AdaptiveCardObjectModelJNI.TextWeightToString(type.swigValue());
  }

  public static TextWeight TextWeightFromString(String type) {
    return TextWeight.swigToEnum(AdaptiveCardObjectModelJNI.TextWeightFromString(type));
  }

  public static String TextSizeToString(TextSize size) {
    return AdaptiveCardObjectModelJNI.TextSizeToString(size.swigValue());
  }

  public static TextSize TextSizeFromString(String size) {
    return TextSize.swigToEnum(AdaptiveCardObjectModelJNI.TextSizeFromString(size));
  }

  public static String ImageSizeToString(ImageSize size) {
    return AdaptiveCardObjectModelJNI.ImageSizeToString(size.swigValue());
  }

  public static ImageSize ImageSizeFromString(String size) {
    return ImageSize.swigToEnum(AdaptiveCardObjectModelJNI.ImageSizeFromString(size));
  }

  public static String SpacingToString(Spacing spacing) {
    return AdaptiveCardObjectModelJNI.SpacingToString(spacing.swigValue());
  }

  public static Spacing SpacingFromString(String spacing) {
    return Spacing.swigToEnum(AdaptiveCardObjectModelJNI.SpacingFromString(spacing));
  }

  public static String SeparatorThicknessToString(SeparatorThickness separatorThickness) {
    return AdaptiveCardObjectModelJNI.SeparatorThicknessToString(separatorThickness.swigValue());
  }

  public static SeparatorThickness SeparatorThicknessFromString(String separatorThickness) {
    return SeparatorThickness.swigToEnum(AdaptiveCardObjectModelJNI.SeparatorThicknessFromString(separatorThickness));
  }

  public static String ImageStyleToString(ImageStyle style) {
    return AdaptiveCardObjectModelJNI.ImageStyleToString(style.swigValue());
  }

  public static ImageStyle ImageStyleFromString(String style) {
    return ImageStyle.swigToEnum(AdaptiveCardObjectModelJNI.ImageStyleFromString(style));
  }

  public static String ActionsOrientationToString(ActionsOrientation orientation) {
    return AdaptiveCardObjectModelJNI.ActionsOrientationToString(orientation.swigValue());
  }

  public static ActionsOrientation ActionsOrientationFromString(String orientation) {
    return ActionsOrientation.swigToEnum(AdaptiveCardObjectModelJNI.ActionsOrientationFromString(orientation));
  }

  public static String ActionModeToString(ActionMode mode) {
    return AdaptiveCardObjectModelJNI.ActionModeToString(mode.swigValue());
  }

  public static ActionMode ActionModeFromString(String mode) {
    return ActionMode.swigToEnum(AdaptiveCardObjectModelJNI.ActionModeFromString(mode));
  }

  public static String ChoiceSetStyleToString(ChoiceSetStyle style) {
    return AdaptiveCardObjectModelJNI.ChoiceSetStyleToString(style.swigValue());
  }

  public static ChoiceSetStyle ChoiceSetStyleFromString(String style) {
    return ChoiceSetStyle.swigToEnum(AdaptiveCardObjectModelJNI.ChoiceSetStyleFromString(style));
  }

  public static String TextInputStyleToString(TextInputStyle style) {
    return AdaptiveCardObjectModelJNI.TextInputStyleToString(style.swigValue());
  }

  public static TextInputStyle TextInputStyleFromString(String style) {
    return TextInputStyle.swigToEnum(AdaptiveCardObjectModelJNI.TextInputStyleFromString(style));
  }

  public static String ContainerStyleToString(ContainerStyle style) {
    return AdaptiveCardObjectModelJNI.ContainerStyleToString(style.swigValue());
  }

  public static ContainerStyle ContainerStyleFromString(String style) {
    return ContainerStyle.swigToEnum(AdaptiveCardObjectModelJNI.ContainerStyleFromString(style));
  }

  public static String ActionAlignmentToString(ActionAlignment alignment) {
    return AdaptiveCardObjectModelJNI.ActionAlignmentToString(alignment.swigValue());
  }

  public static ActionAlignment ActionAlignmentFromString(String alignment) {
    return ActionAlignment.swigToEnum(AdaptiveCardObjectModelJNI.ActionAlignmentFromString(alignment));
  }

}
